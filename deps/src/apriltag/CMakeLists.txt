CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(apriltag)

# Settings
IF (NOT DEFINED CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE RELEASE)
ENDIF()

IF (NOT DEFINED CMAKE_POSITION_INDEPENDENT_CODE)
  SET(CMAKE_POSITION_INDEPENDENT_CODE ON)
ENDIF()

IF (NOT DEFINED USE_OPENMP)
  SET(USE_OPENMP OFF)
ENDIF()

# Dependencies
FIND_PACKAGE(Eigen3 REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)

IF(USE_OPENMP)
  FIND_PACKAGE(OpenMP REQUIRED)
  IF(OPENMP_FOUND)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
    ADD_DEFINITIONS(-DUSE_OPENMP=1)
  ENDIF(OPENMP_FOUND)
ENDIF(USE_OPENMP)

# Includes and Libraries
INCLUDE_DIRECTORIES(include ${OpenCV_INCLUDE_DIRS} ${EIGEN3_INCLUDE_DIR})
SET(DEPS ${OpenCV_LIBS} ${PROJECT_NAME})

# AprilTag
FILE(GLOB CC_FILES ${PROJECT_SOURCE_DIR}/src/*.cc)
ADD_LIBRARY(${PROJECT_NAME} STATIC ${CC_FILES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OpenCV_LIBRARIES})
INSTALL(
  TARGETS ${PROJECT_NAME}
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin
)
INSTALL (
  DIRECTORY ${CMAKE_SOURCE_DIR}/include/
  DESTINATION include
  FILES_MATCHING PATTERN "*.h*"
)

# Python binding
IF (BUILD_PYBINDS)
  FIND_PACKAGE(Python COMPONENTS Interpreter Development)
  IF (NOT DEFINED USE_SYSTEM_PYBIND11)
    SET(USE_SYSTEM_PYBIND11 FALSE)
  ENDIF(NOT DEFINED USE_SYSTEM_PYBIND11)

  IF (USE_SYSTEM_PYBIND11)
    FIND_PACKAGE(pybind11 CONFIG)
  ELSE ()
    ADD_SUBDIRECTORY(third_party/pybind11)
  ENDIF(USE_SYSTEM_PYBIND11)

  IF (NOT DEFINED PYTHON_LIBRARY_DIR)
    SET(PYTHON_LIBRARY_DIR ${Python_STDLIB})
  ENDIF (NOT DEFINED PYTHON_LIBRARY_DIR)

  PYBIND11_ADD_MODULE(${PROJECT_NAME}_pybind MODULE python/apriltag_pybind.cc)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME}_pybind PRIVATE ${DEPS})
  INSTALL(
    TARGETS ${PROJECT_NAME}_pybind
    COMPONENT python
    LIBRARY DESTINATION "${PYTHON_LIBRARY_DIR}"
  )
ENDIF(BUILD_PYBINDS)
